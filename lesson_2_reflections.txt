What happens when you initialize a repository? Why do you need to do it?
	When I initialize a repositiry, a .git file is added to a directory and the versions of the files are ready to be tracked with via commits.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area contains files that are marked to be included in the next commit, but haven't necessarily been modified. The working directory contains the files that are open or have been modified and will be included in the next commit. The repository is where the all files from both the working directory and the staging area end up after they are committed. 

 How can you use the staging area to make sure you have one commit per logical change?
 	By only making commits when logical changes have been made. [Add more here]

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	Branches are helpful when adding or managing different version of a file that share the same root up to that point. Different languages or adding new but experimental features are good examples of when branches would be useful.

How do the diagrams help you visualize the branch structure?
	It visually displays the origins, terminations, and branches of the commits.

